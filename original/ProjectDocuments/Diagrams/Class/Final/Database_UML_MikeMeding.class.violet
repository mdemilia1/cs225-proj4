<?xml version="1.0" encoding="UTF-8"?> 
<java version="1.6.0_41" class="java.beans.XMLDecoder"> 
 <object class="com.horstmann.violet.ClassDiagramGraph"> 
  <void method="addNode"> 
   <object id="InterfaceNode0" class="com.horstmann.violet.InterfaceNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>//SPECIAL FUNCTIONS
    public ArrayList&lt;Integer&gt; stringToList(String uidList) throws NumberFormatException;

    public String listToString(ArrayList&lt;Integer&gt; list);

    public ArrayList&lt;Integer&gt; currentUIDList();

    public int createCommittee(InputCommittee committee) throws DuplicateInsertionException;

    public int nextValidUID();

    public String queryEntireTable();

    public boolean removeCommittee(int uid) throws DoesNotExistException;

    // GETTERS
    public String getTitle(int uid) throws DoesNotExistException;

    public int getChairman(int uid) throws DoesNotExistException;

    public ArrayList&lt;Integer&gt; getBudgetAccessList(int uid) throws DoesNotExistException;

    public ArrayList&lt;Integer&gt; getCommitteeMembers(int uid) throws DoesNotExistException;

    public ArrayList&lt;Integer&gt; getTaskList(int uid) throws DoesNotExistException;

    public double getBudget(int uid) throws DoesNotExistException;

    // SETTERS
    public void setTitle(int uid, String title) throws DoesNotExistException;

    public void setChairman(int uid, int nuid) throws DoesNotExistException;

    public void setBudgetAccessList(int uid, ArrayList&lt;Integer&gt; accessList) throws DoesNotExistException;

    public void setCommitteeMembers(int uid, ArrayList&lt;Integer&gt; memberList) throws DoesNotExistException;

    public void setTaskList(int uid, ArrayList&lt;Integer&gt; taskList) throws DoesNotExistException;

    public void setBudget(int uid, double budget) throws DoesNotExistException;</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Committee_Table</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>710.1401192136475</double> 
     <double>184.5421714526414</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode1" class="com.horstmann.violet.InterfaceNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>// SPECIAL CASE FUNCTIONS
    public ArrayList&lt;Integer&gt; stringToList(String uidList) throws NumberFormatException;

    public String listToString(ArrayList&lt;Integer&gt; list);

    public ArrayList&lt;Integer&gt; currentUIDList();

    public int createEvent(InputEventData event) throws DuplicateInsertionException;

    public int nextValidUID();

    public String queryEntireTable();
    public boolean removeEvent(int uid) throws DoesNotExistException;

    // GETTERS
    public String getDescription(int uid) throws DoesNotExistException;

    public Timestamp getStartDate(int uid) throws DoesNotExistException;

    public Timestamp getEndDate(int uid) throws DoesNotExistException;

    public int getComplete(int uid) throws DoesNotExistException;

    public ArrayList&lt;Integer&gt; getCommittee(int uid) throws DoesNotExistException;

    public ArrayList&lt;Integer&gt; getOrganizerList(int uid) throws DoesNotExistException;

    public ArrayList&lt;Integer&gt; getSubEventList(int uid) throws DoesNotExistException;

    public ArrayList&lt;Integer&gt; getParticipantList(int uid) throws DoesNotExistException;

    public String getStreet(int uid) throws DoesNotExistException; //location info

    public String getCity(int uid) throws DoesNotExistException; //location info

    public String getState(int uid) throws DoesNotExistException; //location info

    public String getZipcode(int uid) throws DoesNotExistException; //location info

    public String getCountry(int uid) throws DoesNotExistException; //location info

    // SETTERS      
    public void setDescription(int uid, String description) throws DoesNotExistException;

    public void setStartDate(int uid, Timestamp time) throws DoesNotExistException;

    public void setEndDate(int uid, Timestamp time) throws DoesNotExistException;

    public void setComplete(int uid, int complete) throws DoesNotExistException;

    public void setCommittee(int uid, ArrayList&lt;Integer&gt; committeeList) throws DoesNotExistException;

    public void setOrganizerList(int uid, ArrayList&lt;Integer&gt; organizerList) throws DoesNotExistException;

    public void setSubEventList(int uid, ArrayList&lt;Integer&gt; subEventList) throws DoesNotExistException;

    public void setParticipantList(int uid, ArrayList&lt;Integer&gt; participantList) throws DoesNotExistException;

    public void setStreet(int uid, String street) throws DoesNotExistException; //location info

    public void setCity(int uid, String city) throws DoesNotExistException; //location info

    public void setState(int uid, String state) throws DoesNotExistException; //location info

    public void setZipcode(int uid, String zipcode) throws DoesNotExistException; //location info

    public void setCountry(int uid, String country) throws DoesNotExistException; //location info</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Event_Table</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1387.9331426580036</double> 
     <double>442.6408590128974</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode2" class="com.horstmann.violet.InterfaceNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>// SPECIAL CASE FUNCTIONS
    public ArrayList&lt;Integer&gt; stringToList(String uidList) throws NumberFormatException;

    public String listToString(ArrayList&lt;Integer&gt; list);

    public ArrayList&lt;Integer&gt; currentUIDList();

    public int createSubEvent(InputSubEventData subevent) throws DuplicateInsertionException;

    public int nextValidUID();

    public String queryEntireTable();

    public boolean removeSubEvent(int uid) throws DoesNotExistException;

    //GETTERS
    public String getDescription(int uid) throws DoesNotExistException;

    public String getStreet(int uid) throws DoesNotExistException; //location info

    public String getCity(int uid) throws DoesNotExistException; //location info

    public String getState(int uid) throws DoesNotExistException; //location info

    public String getZipcode(int uid) throws DoesNotExistException; //location info

    public String getCountry(int uid) throws DoesNotExistException; //location info

    public Timestamp getStartDate(int uid) throws DoesNotExistException;

    public Timestamp getEndDate(int uid) throws DoesNotExistException;

    public int getComplete(int uid) throws DoesNotExistException;

    //SETTERS
    public void setDescription(int uid, String description) throws DoesNotExistException;

    public void setStreet(int uid, String street) throws DoesNotExistException; //location info

    public void setCity(int uid, String city) throws DoesNotExistException; //location info

    public void setState(int uid, String state) throws DoesNotExistException; //location info

    public void setZipcode(int uid, String zipcode) throws DoesNotExistException; //location info

    public void setCountry(int uid, String country) throws DoesNotExistException; //location info

    public void setStartDate(int uid, Timestamp time) throws DoesNotExistException;

    public void setEndDate(int uid, Timestamp time) throws DoesNotExistException;

    public void setComplete(int uid, int complete) throws DoesNotExistException;</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>SubEventData_Table</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1128.5001091033625</double> 
     <double>1067.1162164106352</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode3" class="com.horstmann.violet.InterfaceNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>// SPECIAL CASE FUNCTIONS
    public ArrayList&lt;Integer&gt; stringToList(String uidList) throws NumberFormatException;

    public String listToString(ArrayList&lt;Integer&gt; list);

    public ArrayList&lt;Integer&gt; currentUIDList();

    public int createTask(InputTask task) throws DuplicateInsertionException;

    public int nextValidUID();

    public String queryEntireTable();

    public boolean removeTask(int uid) throws DoesNotExistException;

    // GETTERS
    public String getDescription(int uid) throws DoesNotExistException;    

    public Timestamp getStartDate(int uid) throws DoesNotExistException;

    public Timestamp getEndDate(int uid) throws DoesNotExistException;

    public int getComplete(int uid) throws DoesNotExistException;

    public ArrayList&lt;Integer&gt; getAuthority(int uid) throws DoesNotExistException;

    public String getStreet(int uid) throws DoesNotExistException; //location info

    public String getCity(int uid) throws DoesNotExistException; //location info

    public String getState(int uid) throws DoesNotExistException; //location info

    public String getZipcode(int uid) throws DoesNotExistException; //location info

    public String getCountry(int uid) throws DoesNotExistException; //location info

    // SETTERS      
    public void setDescription(int uid, String description) throws DoesNotExistException;    

    public void setStartDate(int uid, Timestamp time) throws DoesNotExistException;

    public void setEndDate(int uid, Timestamp time) throws DoesNotExistException;

    public void setComplete(int uid, int complete) throws DoesNotExistException;

    public void setAuthority(int uid, ArrayList&lt;Integer&gt; committeeList) throws DoesNotExistException;

    public void setStreet(int uid, String street) throws DoesNotExistException; //location info

    public void setCity(int uid, String city) throws DoesNotExistException; //location info

    public void setState(int uid, String state) throws DoesNotExistException; //location info

    public void setZipcode(int uid, String zipcode) throws DoesNotExistException; //location info

    public void setCountry(int uid, String country) throws DoesNotExistException; //location info</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Task_Table</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>47.3288183887224</double> 
     <double>342.51425120365866</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode4" class="com.horstmann.violet.InterfaceNode"> 
    <void property="methods"> 
     <void property="text"> 
      <string>// SPECIAL FUNCTIONS
    public boolean createUser(InputUser user) throws DuplicateInsertionException;
    public String queryEntireTable();
    public int nextValidUID();
    public boolean removeUser(int uid) throws DoesNotExistException;

    // GETTERS
    public int getUIDByEmail(String email) throws DoesNotExistException;
    public String getFirstName(int uid) throws DoesNotExistException;
    public String getLastName(int uid) throws DoesNotExistException;
    public String getEmail(int uid) throws DoesNotExistException;
    public String getPwd(int uid) throws DoesNotExistException;
    public int getLevel(int uid) throws DoesNotExistException;
    public String getPhone(int uid) throws DoesNotExistException;
    public String getStreet(int uid) throws DoesNotExistException;
    public String getCity(int uid) throws DoesNotExistException;
    public String getState(int uid) throws DoesNotExistException;
    public String getZipcode(int uid) throws DoesNotExistException;
    public String getCountry(int uid) throws DoesNotExistException;
    public int getEventCreationPrivilege(int uid) throws DoesNotExistException;
    
    //SETTERS
    public void setUID(int uid, int nuid) throws DuplicateInsertionException;
    public void setFirstName(int uid, String fname) throws DoesNotExistException;
    public void setLastName(int uid, String lname) throws DoesNotExistException;
    public void setEmail(int uid, String email) throws DoesNotExistException;
    public void setPwd(int uid, String pwd) throws DoesNotExistException;
    public void setLevel(int uid, int level) throws DoesNotExistException;
    public void setPhone(int uid, String phone) throws DoesNotExistException;
    public void setStreet(int uid, String street) throws DoesNotExistException;
    public void setCity(int uid, String city) throws DoesNotExistException;
    public void setState(int uid, String state) throws DoesNotExistException;
    public void setZipcode(int uid, String zipcode) throws DoesNotExistException;
    public void setCountry(int uid, String country) throws DoesNotExistException;
    public void setEventCreationPrivilege(int uid, int level) throws DoesNotExistException;</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>User_Table</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>112.69893414694857</double> 
     <double>1147.4106619008062</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode5" class="com.horstmann.violet.InterfaceNode"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>157.3404996397516</double> 
     <double>81.08464346209222</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode0" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>private int uid;
    private int level;
    private String fname;
    private String lname;
    private String pwd;
    private String email;
    private String phone;
    private String street;
    private String city;
    private String state;
    private String zipcode;
    private String country;
    private int eventLevel;</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>InputUser</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>147.36472818148962</double> 
     <double>876.68056184071</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode6" class="com.horstmann.violet.InterfaceNode"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>327.7555829736431</double> 
     <double>968.7335818989479</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode7" class="com.horstmann.violet.InterfaceNode"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1507.551657489719</double> 
     <double>321.74429945228314</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode8" class="com.horstmann.violet.InterfaceNode"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>862.6702730475876</double> 
     <double>44.99971197870511</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="InterfaceNode9" class="com.horstmann.violet.InterfaceNode"/> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1794.8482785390809</double> 
     <double>1126.3793799102712</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode1" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>private String descripton;
    private String street;
    private String city;
    private String state;
    private String zipcode;
    private String country;    
    private Timestamp startDate;
    private Timestamp endDate;
    private int complete;
    private String manager;</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>InputTask</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>420.5356157977008</double> 
     <double>37.78650038951561</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode2" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>private String description;
    private String location;
    private Timestamp startDate;
    private Timestamp endDate;
    private int complete;
    private ArrayList&lt;Integer&gt; committee; // as a list of committees in charge of event
    private ArrayList&lt;Integer&gt; organizerList; // list of organizers
    private ArrayList&lt;Integer&gt; subEventList;
    private ArrayList&lt;Integer&gt; participantList;
    private String street;
    private String city;
    private String state;
    private String zipcode;
    private String country;</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>InputEvent</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1448.1546878700494</double> 
     <double>10.724963468527335</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode3" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>private String title;
    private int chairman;
    private String budgetAcess;
    private String committeeMembers;
    private String taskList;
    private double budget;</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>InputCommittee</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1129.8274978321151</double> 
     <double>23.722333664957958</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode4" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>private String description;    
    private int complete;
    private String street;
    private String city;
    private String state;
    private String zipcode;
    private String country;        
    private Timestamp startTime;
    private Timestamp endTime;</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>InputSubEvent</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>1756.5401063371291</double> 
     <double>1316.4592049285695</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode5" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>protected Connection dbConnection = null;</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>public InitDB()
public Connection getConnection()</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>InitDB</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>739.8063506472389</double> 
     <double>796.8163663941136</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode6" class="com.horstmann.violet.ClassNode"> 
    <void property="attributes"> 
     <void property="text"> 
      <string>Your code implementation would fit here</string> 
     </void> 
    </void> 
    <void property="methods"> 
     <void property="text"> 
      <string>You must define tables as objects to use their functions</string> 
     </void> 
    </void> 
    <void property="name"> 
     <void property="text"> 
      <string>Main</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>701.6321978516052</double> 
     <double>1550.7260779635476</double> 
    </void> 
   </object> 
  </void> 
  <void method="addNode"> 
   <object id="ClassNode7" class="com.horstmann.violet.ClassNode"> 
    <void property="name"> 
     <void property="text"> 
      <string>DoesNotExistException</string> 
     </void> 
    </void> 
   </object> 
   <object class="java.awt.geom.Point2D$Double"> 
    <void method="setLocation"> 
     <double>480.4396744610989</double> 
     <double>968.0145916122145</double> 
    </void> 
   </object> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode3"/> 
   <object idref="InterfaceNode5"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode4"/> 
   <object idref="InterfaceNode6"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode1"/> 
   <object idref="InterfaceNode7"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode0"/> 
   <object idref="InterfaceNode8"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="VHV"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="TRIANGLE"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode2"/> 
   <object idref="InterfaceNode9"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode3"/> 
   <object idref="ClassNode1"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode4"/> 
   <object idref="ClassNode0"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode1"/> 
   <object idref="ClassNode2"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode0"/> 
   <object idref="ClassNode3"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
    <void property="lineStyle"> 
     <object class="com.horstmann.violet.LineStyle" field="DOTTED"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode2"/> 
   <object idref="ClassNode4"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode3"/> 
   <object idref="ClassNode5"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode0"/> 
   <object idref="ClassNode5"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode1"/> 
   <object idref="ClassNode5"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode2"/> 
   <object idref="ClassNode5"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="startArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="DIAMOND"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode4"/> 
   <object idref="ClassNode5"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.NoteEdge"/> 
   <object idref="ClassNode6"/> 
   <object idref="ClassNode5"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode4"/> 
   <object idref="ClassNode7"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode2"/> 
   <object idref="ClassNode7"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode3"/> 
   <object idref="ClassNode7"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode0"/> 
   <object idref="ClassNode7"/> 
  </void> 
  <void method="connect"> 
   <object class="com.horstmann.violet.ClassRelationshipEdge"> 
    <void property="bentStyle"> 
     <object class="com.horstmann.violet.BentStyle" field="HVH"/> 
    </void> 
    <void property="endArrowHead"> 
     <object class="com.horstmann.violet.ArrowHead" field="V"/> 
    </void> 
   </object> 
   <object idref="InterfaceNode1"/> 
   <object idref="ClassNode7"/> 
  </void> 
 </object> 
</java> 
