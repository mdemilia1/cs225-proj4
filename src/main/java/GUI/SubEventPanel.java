/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BackEnd.EventSystem.CalendarEvent;
import BackEnd.EventSystem.SubEvent;
import BackEnd.EventSystem.TimeSchedule;
import BackEnd.UserSystem.Location;
import GUI.Dialog.NewTimeStampDialog;
import auth.AuthorizationException;

import java.util.Calendar;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Sid
 */
public class SubEventPanel extends javax.swing.JPanel {

    private TimeSchedule tempTimeSchedule;
    private SubEvent se;
    /**
     * Creates new form SubEventPanel
     */
    public SubEventPanel(SubEvent e) throws AuthorizationException{
        initComponents();
        se = e;
        if (e.getTimeSchedule() != null)
        {
            tempTimeSchedule = se.getTimeSchedule();
        }
        else
        {
            tempTimeSchedule = new TimeSchedule();;
        }
        
//        tempTimeSchedule.setStartDateTime(tempTimeSchedule.getStartDateTimeCalendar().get(Calendar.YEAR), 
//                tempTimeSchedule.getStartDateTimeCalendar().get(Calendar.MONTH),
//                tempTimeSchedule.getStartDateTimeCalendar().get(Calendar.DAY_OF_MONTH), 13, 0);
        setSize(450, 400);
        DefaultComboBoxModel dayModel = new DefaultComboBoxModel();
        for (int i = 0; i < 32; i++) {
            if(i == 0)
            { dayModel.addElement("Day"); }
            else
            { dayModel.addElement(i); }
        }
        DefaultComboBoxModel yearModel = new DefaultComboBoxModel();
        yearModel.addElement("Year");
        for(int i = 2013; i < 2050; i++)
        {
            yearModel.addElement(i);
        }
        DefaultComboBoxModel minModel = new DefaultComboBoxModel();
        minModel.addElement("Minute");
        for(int i = 1; i < 61; i++)
        {
            minModel.addElement(i);
        }
        dueDateLabel.setText("Due Date: " + tempTimeSchedule.getEndDateTimeTimestamp().toString());
        startDateLabel.setText("Start Date: " + tempTimeSchedule.getStartDateTimeTimestamp().toString());
    }
    
    public SubEvent createEvent() throws AuthorizationException
    {
        SubEvent e = new SubEvent(nameField.getText());
        e.setTimeSchedule(tempTimeSchedule);
        e.setLocation(new Location(locationField.getText()));
        e.setDescription(descriptionTextArea.getText());
        //TimeSchedule t = new TimeSchedule((int)yearSelect.getSelectedItem(),monthSelect.getSelectedIndex(), daySelect.getSelectedIndex(), );
        return e;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        headerLabel = new javax.swing.JLabel();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        locationLabel = new javax.swing.JLabel();
        locationField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        editTimeScheduleButton = new javax.swing.JButton();
        dueDateLabel = new javax.swing.JLabel();
        startDateLabel = new javax.swing.JLabel();

        headerLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        headerLabel.setText("SubEvent Name");

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        descriptionTextArea.setText("Description of this event.");
        descriptionScrollPane.setViewportView(descriptionTextArea);

        locationLabel.setText("Location:");

        editTimeScheduleButton.setFont(new java.awt.Font("Candara", 0, 11)); // NOI18N
        editTimeScheduleButton.setText("edit");
        editTimeScheduleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                try{
                    editTimeScheduleButtonActionPerformed(evt);
                }catch (AuthorizationException ignore){}
            }
        });

        dueDateLabel.setFont(new java.awt.Font("Candara", 0, 12)); // NOI18N
        dueDateLabel.setText("Due Date : MM/DD/YY - 00:00 AM");

        startDateLabel.setFont(new java.awt.Font("Candara", 0, 12)); // NOI18N
        startDateLabel.setText("Start Date: MM/DD/YY - 00:00 AM");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descriptionScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(headerLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nameField))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(startDateLabel)
                                    .addComponent(dueDateLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(editTimeScheduleButton))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(locationLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(locationField, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 139, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(headerLabel)
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(descriptionScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startDateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dueDateLabel))
                    .addComponent(editTimeScheduleButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationLabel)
                    .addComponent(locationField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(90, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void editTimeScheduleButtonActionPerformed(java.awt.event.ActionEvent evt)
        throws AuthorizationException{//GEN-FIRST:event_editTimeScheduleButtonActionPerformed
        // TODO add your handling code here:
        NewTimeStampDialog ntsd = new NewTimeStampDialog(null, true, tempTimeSchedule);
        ntsd.setVisible(true);
        if(ntsd.getConfirm())
        {
            tempTimeSchedule = ntsd.createTimeSchedule();
        }
        updateLabels();
    }//GEN-LAST:event_editTimeScheduleButtonActionPerformed

    private void updateLabels() throws AuthorizationException
    {
        dueDateLabel.setText("Due date: " + tempTimeSchedule.getEndDateTimeTimestamp().toString());
        startDateLabel.setText("Start date: " + tempTimeSchedule.getStartDateTimeTimestamp().toString());
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel dueDateLabel;
    private javax.swing.JButton editTimeScheduleButton;
    private javax.swing.JLabel headerLabel;
    private javax.swing.JTextField locationField;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel startDateLabel;
    // End of variables declaration//GEN-END:variables
}
