/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI.Dialog;

import BackEnd.EventSystem.Task;
import BackEnd.EventSystem.TimeSchedule;
import BackEnd.ManagerSystem.MainManager;
import GUI.DesignDefault;
import auth.AuthorizationException;

import javax.swing.JOptionPane;

/**
 *
 * @author Sid
 */
public class NewTaskDialog extends javax.swing.JDialog {

    /**
     * Creates new form NewTaskDialog
     */
    
    private boolean confirm;
    private MainManager manager;
    private DesignDefault dd;
    Task task;
    public NewTaskDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        dd = DesignDefault.getInstance();
        this.setTitle("New Task");
        this.setBackground(dd.getDialogBGColor());
        initComponents();
        /* Added following line to center dialog. -Ketty */
        setLocationRelativeTo(null);
        confirm = false;
        task = new Task();
        manager = MainManager.getInstance();
    }
    
    public boolean getConfirm()
    { return confirm; }
    
    public Task createTask()
        throws AuthorizationException{
        task.setTitle(taskNameField.getText());
        task.setDescription(descriptionTextArea.getText());
        return task;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        taskNameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        dueDate = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        closeButton = new javax.swing.JButton();
        startDate = new javax.swing.JLabel();
        startDateLabel = new javax.swing.JLabel();
        dueDateLabel = new javax.swing.JLabel();
        editDueButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Candara", 0, 14)); // NOI18N
        jLabel1.setText("Task Name");

        jLabel2.setFont(dd.getStandardText());
        jLabel2.setText("Description");

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);

        dueDate.setFont(dd.getStandardText());
        dueDate.setText("Due Date");

        saveButton.setFont(dd.getStandardText());
        saveButton.setText("Save");
        saveButton.setMinimumSize(dd.getBigButtonDimension());
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                try{
                    saveButtonActionPerformed(evt);
                }catch (AuthorizationException ignore){}
            }
        });

        closeButton.setFont(dd.getStandardText());
        closeButton.setMinimumSize(dd.getBigButtonDimension());
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        startDate.setFont(dd.getStandardText());
        startDate.setText("StartDate");

        startDateLabel.setFont(dd.getStandardText());
        startDateLabel.setText(" MM/DD/YY - 00:00 AM");

        dueDateLabel.setFont(dd.getStandardText());
        dueDateLabel.setText("MM/DD/YY - 00:00 AM");

        editDueButton.setFont(dd.getStandardText());
        editDueButton.setText("Edit");
        editDueButton.setMinimumSize(dd.getBigButtonDimension());
        editDueButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                try{
                    editDueButtonActionPerformed(evt);
                }catch (AuthorizationException ignore){}
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(taskNameField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(dueDate)
                                .addGap(18, 18, 18)
                                .addComponent(dueDateLabel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(startDate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(startDateLabel))
                            .addComponent(editDueButton))
                        .addGap(0, 187, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(taskNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startDate)
                    .addComponent(startDateLabel))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dueDate)
                    .addComponent(dueDateLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editDueButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveButton)
                    .addComponent(closeButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public boolean checkNames()
        throws AuthorizationException{
        for (Task t : manager.getCommitteeManager().getSelectedCommittee().getTaskList())
        {
            if(t.getTitle().toLowerCase().trim().equals(taskNameField.getText().toLowerCase().trim()))
                return false;
        }
        return true;
    }
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt)
        throws AuthorizationException{//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        if(!checkNames())
        {
            JOptionPane.showMessageDialog(null, "Duplicate task name, please choose another." , "Duplicate Task", JOptionPane.ERROR_MESSAGE);
        }
        else if(taskNameField.getText().trim().length() == 0)
        {
            JOptionPane.showMessageDialog(null, "No task name given, please enter a name for this task", "No Task Name", JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            confirm = true;
            dispose();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_closeButtonActionPerformed

    private void editDueButtonActionPerformed(java.awt.event.ActionEvent evt)
    throws AuthorizationException{//GEN-FIRST:event_editDueButtonActionPerformed
        // TODO add your handling code here:
        NewTimeStampDialog ntsd = new NewTimeStampDialog(null, true, new TimeSchedule());
        ntsd.setVisible(true);
        if(ntsd.getConfirm())
        {
            task.setTimeSchedule(ntsd.createTimeSchedule());
        }
        startDateLabel.setText(task.getTimeSchedule().getStartDateTimeTimestamp().toString());
        dueDateLabel.setText(task.getTimeSchedule().getEndDateTimeTimestamp().toString());
    }//GEN-LAST:event_editDueButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewTaskDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewTaskDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewTaskDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewTaskDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                NewTaskDialog dialog = new NewTaskDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel dueDate;
    private javax.swing.JLabel dueDateLabel;
    private javax.swing.JButton editDueButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton saveButton;
    private javax.swing.JLabel startDate;
    private javax.swing.JLabel startDateLabel;
    private javax.swing.JTextField taskNameField;
    // End of variables declaration//GEN-END:variables
}
