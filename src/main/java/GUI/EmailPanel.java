/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BackEnd.ManagerSystem.MainManager;
import BackEnd.ManagerSystem.ManagerExceptions.PrivilegeInsufficientException;
import Email.Email;
import GUI.Dialog.EmailSelectionDialog;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author Karina
 */
public class EmailPanel extends javax.swing.JPanel {

    private MainManager manager;
    private DesignDefault dd;
    /**
     * Creates new form EmailPanel
     */
    public EmailPanel() throws PrivilegeInsufficientException {
	    dd = DesignDefault.getInstance();
        initComponents();
	    manager = MainManager.getInstance();
	    // welcomeLabel.setText("Welcome " + manager.getLogInManager().getLoggedInUser().getFirstName() + " " + manager.getLogInManager().getLoggedInUser().getLastName());
	    setVisible(true);
        this.setBackground(dd.getPanelBGColor());
    }

    public void sendOnClick()
    {
        ArrayList<String> toList = new ArrayList<String>(Arrays.asList(toField.getText().split(";")));
        if (toField.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please type an email address in the to box.");
        } else {
            try {
                Email.send(manager.getLogInManager().getLoggedInUser().getEmailAddress(), toList, subjectField.getText(), messageArea.getText(), (manager.getLogInManager().getLoggedInUser().getFirstName() + " " + manager.getLogInManager().getLoggedInUser().getLastName()));
                JOptionPane.showMessageDialog(null, "Your message has been sent.");
                toField.setText("");
                subjectField.setText("");
                messageArea.setText("");
            } catch (Exception ex) {
                Logger.getLogger(EmailPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        emailWindowLabel = new javax.swing.JLabel();
        toLabel = new javax.swing.JLabel();
        toField = new javax.swing.JTextField();
        addCommittee = new javax.swing.JButton();
        subjectField = new javax.swing.JTextField();
        subject = new javax.swing.JLabel();
        messageScrollPane = new javax.swing.JScrollPane();
        messageArea = new javax.swing.JTextArea();
        sendButton = new javax.swing.JButton();

        discardButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(128, 128, 128));
        setMaximumSize(new java.awt.Dimension(760, 620));
        setMinimumSize(new java.awt.Dimension(760, 620));
        setPreferredSize(new java.awt.Dimension(760, 620));

        emailWindowLabel.setFont(dd.getHeaderText());
        emailWindowLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        emailWindowLabel.setText("Email");

        toLabel.setBackground(dd.getPanelBGColor());
        toLabel.setFont(dd.getStandardText());
        toLabel.setText(" To:");
        toLabel.setMaximumSize(new java.awt.Dimension(25, 20));
        toLabel.setMinimumSize(new java.awt.Dimension(25, 20));
        toLabel.setOpaque(true);
        toLabel.setPreferredSize(new java.awt.Dimension(25, 20));

        toField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toFieldActionPerformed(evt);
            }
        });

        addCommittee.setFont(dd.getStandardText());
        addCommittee.setText("Add User/Committee");
        addCommittee.setSize(dd.getBigButtonDimension());
        addCommittee.setToolTipText("menu for adding many recipients");
        addCommittee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCommitteeActionPerformed(evt);
            }
        });

        subjectField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subjectFieldActionPerformed(evt);
            }
        });

        subject.setFont(dd.getStandardText());
        subject.setText("Subject:");
        subject.setBackground(dd.getPanelBGColor());
        subject.setMaximumSize(new java.awt.Dimension(50, 20));
        subject.setMinimumSize(new java.awt.Dimension(50, 20));
        subject.setOpaque(true);
        subject.setPreferredSize(new java.awt.Dimension(50, 20));

        messageScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        messageScrollPane.setAutoscrolls(true);
        messageScrollPane.setMaximumSize(new java.awt.Dimension(740, 460));
        messageScrollPane.setMinimumSize(new java.awt.Dimension(740, 460));
        messageScrollPane.setPreferredSize(new java.awt.Dimension(740, 460));

        messageArea.setColumns(20);
        messageArea.setRows(5);
        messageArea.setWrapStyleWord(true);
        messageArea.setBorder(null);
        messageArea.setMaximumSize(new java.awt.Dimension(730, 450));
        messageArea.setMinimumSize(new java.awt.Dimension(730, 450));
        messageArea.setPreferredSize(new java.awt.Dimension(730, 450));
        messageScrollPane.setViewportView(messageArea);

        sendButton.setFont(dd.getStandardText());
        sendButton.setText("Send");
        sendButton.setSize(dd.getBigButtonDimension());
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        discardButton.setFont(dd.getStandardText());
        discardButton.setText("Discard");
        discardButton.setSize(dd.getBigButtonDimension());
        discardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailWindowLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(toLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(subject, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(toField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addCommittee))
                            .addComponent(subjectField)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(messageScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(sendButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(discardButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(emailWindowLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toField)
                    .addComponent(addCommittee))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subjectField))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(messageScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sendButton)
                    .addComponent(discardButton)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void subjectFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subjectFieldActionPerformed
	// TODO add your handling code here:
    }//GEN-LAST:event_subjectFieldActionPerformed

    private void toFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toFieldActionPerformed
	// TODO add your handling code here:
    }//GEN-LAST:event_toFieldActionPerformed

    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        sendOnClick();
	/*ArrayList<String> toList = new ArrayList<String>(Arrays.asList(toField.getText().split(";")));
	if (toField.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Please type an email address in the to box.");   
        }
        else{
            try {
                //JOptionPane.showMessageDialog(null, "you hit enter.");
                Email.send(manager.getLogInManager().getLoggedInUser().getEmailAddress(), toList, subjectField.getText(), messageArea.getText(), (manager.getLogInManager().getLoggedInUser().getFirstName() + " " + manager.getLogInManager().getLoggedInUser().getLastName()));
                JOptionPane.showMessageDialog(null, "Your message has been sent.");
                toField.setText("");
                subjectField.setText("");
                messageArea.setText("");
            } catch (Exception ex) {
                Logger.getLogger(EmailPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }*/
    }//GEN-LAST:event_sendButtonActionPerformed

    private void discardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardButtonActionPerformed
	toField.setText("");
	subjectField.setText("");
	messageArea.setText("");
        //hide panel on discard
        this.setVisible(false);
    }//GEN-LAST:event_discardButtonActionPerformed

    private void addCommitteeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCommitteeActionPerformed
	//local vars
	ArrayList<String> emailList = new ArrayList<String>();
	EmailSelectionDialog esd = new EmailSelectionDialog((JFrame) SwingUtilities.windowForComponent(this), true);
	esd.setVisible(true);

	if (esd.getConfirm()) {
	    //get the array list of emails from EmailSelectionDialog
	    emailList = esd.addressesToArray();
	    // concatenate all return emails into one string
	    StringBuilder catText = new StringBuilder();
	    for (String email : emailList) {
		catText.append(email);
		catText.append(",");
	    }
	    //set the text. 
	    toField.setText(catText.toString());

	}

    }//GEN-LAST:event_addCommitteeActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addCommittee;
    private javax.swing.JButton discardButton;
    private javax.swing.JLabel emailWindowLabel;
    private javax.swing.JTextArea messageArea;
    private javax.swing.JScrollPane messageScrollPane;
    private javax.swing.JButton sendButton;
    private javax.swing.JLabel subject;
    private javax.swing.JTextField subjectField;
    private javax.swing.JTextField toField;
    private javax.swing.JLabel toLabel;
    // End of variables declaration//GEN-END:variables
}